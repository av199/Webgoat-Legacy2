pipeline {
    agent any

    environment {
        REGISTRY = 'sola.local:18082'
        IMAGENAME = 'webgoat'
        DEV_REPO = 'staging-dev'
        TAG_FILE = './tag_file.json'
        ARTEFACT_NAME = "./target/WebGoat-${BUILD_VERSION}.war"
    }

    stages {

        stage('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore clean package'
            }
            post {
                success {
                    echo 'Now archiving...'
                    archiveArtifacts artifacts: "**/target/*.war"
                }
            }
        }

        stage('Nexus IQ Scan'){
            steps {
                script{
                    def policyEvaluation = nexusPolicyEvaluation failBuildOnNetworkError: true, iqApplication: selectedApplication('webgoat-legacy'), iqScanPatterns: [[scanPattern: '**/*.war']], iqStage: 'build', jobCredentialsId: 'wguser'
                }
            }
        }

        stage('Create Dockerfile'){
            steps {
                script {
                    writeFile file: 'Dockerfile', text: 
                        '''FROM tomcat:8.0.43-jre8
                        ADD ${ARTEFACT_NAME} /usr/local/tomcat/webapps/
                        EXPOSE 8080
                        CMD chmod +x /usr/local/tomcat/bin/catalina.sh
                        CMD ["catalina.sh", "run"]'''
                }
            }
        }

        stage('Build docker image'){
            steps {
                script {
                    docker.build('webgoat')        
                    sh 'echo "$REGISTRY/$IMAGENAME:$BUILD_VERSION ${WORKSPACE}/Dockerfile " > anchore_images'
                }
            }
        }
    }
}

