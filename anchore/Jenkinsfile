pipeline {
    agent any

    environment {
        REGISTRY = 'sola.local:18082'
        IMAGENAME = 'webgoat'
        DEV_REPO = 'staging-dev'
        TAG_FILE = './tag_file.json'
        SCAN_FILE = './target/WebGoat-5.4.4.3-SNAPSHOT.war'
    }

    stages {

        stage('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore clean package'
            }
            post {
                success {
                    echo 'Now archiving...'
                    archiveArtifacts artifacts: "**/target/*.war"
                }
            }
        }

        stage('Nexus IQ Scan'){
            steps {
                script{
                    def policyEvaluation = nexusPolicyEvaluation failBuildOnNetworkError: true, iqApplication: selectedApplication('webgoat-legacy'), iqScanPatterns: [[scanPattern: '**/*.war']], iqStage: 'build', jobCredentialsId: 'wguser'
                }
            }
        }

        stage('Build docker image'){
            steps {
                def app = docker.build('webgoat')        
                sh 'echo "$REGISTRY/$IMAGENAME:$BUILD_VERSION ${WORKSPACE}/Dockerfile " > anchore_images'
            }
        }
    }
}

