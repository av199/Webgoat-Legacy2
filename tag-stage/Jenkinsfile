pipeline {
    agent any

    environment {
        ARTEFACT_NAME = "${WORKSPACE}/target/WebGoat-${BUILD_VERSION}.war"
        DEV_REPO = 'staging-dev'
        PROD_REPO = 'staging-prod'
        TAG_FILE = "${WORKSPACE}/tag.json"
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -Dproject.version=$BUILD_VERSION -Dmaven.test.failure.ignore clean package'
            }
            post {
                success {
                    echo 'Now archiving...'
                    archiveArtifacts artifacts: "**/target/*.war"

                    echo 'Now creating tag metadata'
                    sh "echo '{' > ${TAG_FILE}"
                    sh "echo '\"buildUser\"':'\"${USER}\",' >> ${TAG_FILE}"
                    sh "echo '\"buildNumber\"':'\"${BUILD_NUMBER}\",' >> ${TAG_FILE}"
                    sh "echo '\"buildId\"':'\"${BUILD_ID}\",' >> ${TAG_FILE}"
                    sh "echo '\"buildJob\"':'\"${JOB_NAME}\",' >> ${TAG_FILE}"
                    sh "echo '\"buildTag\"':'\"${BUILD_TAG}\",' >> ${TAG_FILE}"
                    sh "echo '\"appVersion\"':'\"${BUILD_VERSION}\",' >> ${TAG_FILE}"
                    sh "echo '\"buildUrl\"':'\"${BUILD_URL}\",' >> ${TAG_FILE}"
                    sh "echo '\"iqscanUrl\"':'\"${BUILD_URL}\"' >> ${TAG_FILE}"
                    sh "echo '}' >> ${TAG_FILE}"
                    sh 'cat ${TAG_FILE}'
                }
            }
        }

        stage('Tagging'){
            steps {
                script {
                    createTag nexusInstanceId: 'nxrm3', tagAttributesPath: "${TAG_FILE}", tagName: "${BUILD_TAG}"

                    nexusPublisher nexusInstanceId: 'nxrm3', nexusRepositoryId: 'staging-dev', packages: [[$class: 'MavenPackage', mavenAssetList: [], mavenCoordinate: [artifactId: 'WebGoat', groupId: 'org.demo', packaging: 'war', version: '1.1']]], tagName: 'my-webgoat-tag'

                }
            }
        }
    }
}

